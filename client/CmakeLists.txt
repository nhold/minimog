# MiniMO

file(GLOB includefiles
"include/*.hpp"
)

file(GLOB sourcefiles
"source/*.cpp"
)

add_executable(client
        ${includefiles}
        ${sourcefiles} "include/tilemap.hpp" "source/tilemap.cpp")

find_package(OpenGL REQUIRED)
find_package(SFML COMPONENTS main window graphics network system audio)

target_link_libraries(client game)

if(WIN32)
  target_link_libraries(client wsock32 ws2_32 winmm)
endif()

target_link_libraries(client sfml-graphics sfml-audio sfml-network
${OPENGL_LIBRARIES})

target_link_libraries(client debug "${CMAKE_SOURCE_DIR}/thirdparty/enet/enet64.lib")
target_link_libraries(client optimized "${CMAKE_SOURCE_DIR}/thirdparty/enet/enet64.lib")

target_include_directories(client PUBLIC
    "${CMAKE_SOURCE_DIR}/thirdparty/imgui/"
    "${CMAKE_SOURCE_DIR}/thirdparty/json/"
    "${CMAKE_SOURCE_DIR}/thirdparty/pfd/"
    "${CMAKE_SOURCE_DIR}/thirdparty/enet/"
    "${CMAKE_SOURCE_DIR}/shared/include/"
    "include/"
    "${OPENGL_INCLUDE_DIR}")

set (assetDir "${CMAKE_SOURCE_DIR}/assets")
set (assetDestination "${CMAKE_CURRENT_BINARY_DIR}")

file(COPY "${assetDir}" DESTINATION "${assetDestination}")